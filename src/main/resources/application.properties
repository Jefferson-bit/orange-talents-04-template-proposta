spring.profiles.active=${PROFILE:test}
cliente.avaliacao.financeira.url=${AVALIACAO_URL:http://localhost:9999}
cliente.cartao.url=${CARTAO_URL:http://localhost:8888}
time.scheduled=180000
chave.password=test
chave.algoritmo=PBEWithMD5AndDES
client-id=proposta
client-secret=aec2c4b6-5548-4edf-bbe9-f6c6b7f62036

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

## actuator/prometheus
management.endpoints.web.exposure.include= info,health,prometheus
management.endpoints.prometheus.enabled=true
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}